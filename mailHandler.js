//x·ª≠ l√Ω c√°c th√¥ng b√°o t·ª´ banks
function processBankAlerts() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet();
  const threads = GmailApp.search('-is:starred');

  for (let thread of threads) {
    const messages = thread.getMessages();

    for (let message of messages) {    
      // Tr√≠ch xu·∫•t th√¥ng tin t·ª±a v√† n·ªôi dung t·ª´ email
      const body = message.getPlainBody();
      const subject = message.getSubject();    

      // G·ªçi OpenAI ƒë·ªÉ ph√¢n lo·∫°i th√¥ng minh tab, m·ª•c, s·ªë ti·ªÅn, n∆°i ph√°t sinh giao d·ªãch, ghi ch√∫, ghi c·ªßa ng√¢n h√†ng, ng√†y giao d·ªãch
      const aiResult = classifyTransactionWithAI(subject, body);
      const tabName = aiResult.tab || 'üõí Chi ph√≠ bi·∫øn ƒë·ªïi';
      const typeTx = aiResult.type || 'Thu'
      const dateTx = aiResult.date || '';
      const descTx = aiResult.desc || '';      
      const amountTx = aiResult.amount || '0';      
      const locationTx = aiResult.location || 'N/A';
      const categoryTx = aiResult.category || 'Kh√°c';
      const bankcommentTx = aiResult.bankcomment || '';          

      // Ghi v√†o tab t∆∞∆°ng ·ª©ng
      const targetSheet = sheet.getSheetByName(tabName);
      if (targetSheet) {
        const lastRow = targetSheet.getLastRow();
        targetSheet.appendRow([dateTx, descTx, amountTx, locationTx, categoryTx, bankcommentTx]);        
        rowID = lastRow+1;
        
        //g·ª≠i th√¥ng b√°o Telegram
        const message = `${typeTx} *${amountTx} EUR* cho *${descTx}*\n‚úèÔ∏è_Ghi v√†o ${tabName}, m·ª•c ${categoryTx}, d√≤ng ${rowID}_\n`;
        sendTelegramMessage (message);
      }

      // ƒê√°nh d·∫•u ƒë√£ x·ª≠ l√Ω
      message.star();
      message.markRead();
    }
  }
}


