//x·ª≠ l√Ω c√°c th√¥ng b√°o t·ª´ banks
function processBankAlerts() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet();
  const threads = GmailApp.search('-is:starred');

  for (let thread of threads) {
    const messages = thread.getMessages();

    for (let message of messages) {    
      // Tr√≠ch xu·∫•t th√¥ng tin t·ª±a v√† n·ªôi dung t·ª´ email
      const body = message.getPlainBody();
      const subject = message.getSubject();    

      // G·ªçi OpenAI ƒë·ªÉ ph√¢n lo·∫°i th√¥ng minh tab, m·ª•c, s·ªë ti·ªÅn, n∆°i ph√°t sinh giao d·ªãch, ghi ch√∫, ghi c·ªßa ng√¢n h√†ng, ng√†y giao d·ªãch
      const aiResult = classifyTransactionWithOpenAI(subject, body);
      const groupTx = aiResult.group || 'üõí Chi ph√≠ bi·∫øn ƒë·ªïi';
      const typeTx = aiResult.type || 'Thu'
      const dateTx = aiResult.date || '';
      const descTx = aiResult.desc || '';      
      const amountTx = aiResult.amount || '0';      
      const locationTx = aiResult.location || 'N/A';
      const categoryTx = aiResult.category || 'Kh√°c';
      const bankcommentTx = aiResult.bankcomment || '';
      
      //ki·∫øm tra xem giao d·ªãch c√≥ t·ªìn t·∫°i ch∆∞a
      const tx = {
        date: dateTx,
        amount: amountTx,
        description: descTx,
        bankComment: bankcommentTx,
        category: categoryTx,
        group: groupTx, 
        type: typeTx,
        location: locationTx
      };

      const checkResult = checkAndConfirmTransaction(tx);
      if (checkResult.exists) {
        //g·ª≠i th√¥ng b√°o Telegram ƒë·ªÉ x√°c nh·∫≠n
        sendTelegramMessage (checkResult.message);
      } else {
        //th√™m m·ªõi giao d·ªãch
        const addResult = addConfirmedTransaction(groupTx, tx);      
        sendTelegramMessage (addResult.message);  
        if (!addResult.success) {
          sendTelegramMessage (addResult.error);
          continue;
        }
      }

      // ƒê√°nh d·∫•u ƒë√£ x·ª≠ l√Ω
      message.star();
      message.markRead();
    }
  }
}


